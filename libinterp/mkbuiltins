#! /bin/sh
#
# Copyright (C) 1996-2015 John W. Eaton
#
# This file is part of Octave.
#
# Octave is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 3 of the License, or (at
# your option) any later version.
#
# Octave is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
#
# You should have received a copy of the GNU General Public License
# along with Octave; see the file COPYING.  If not, see
# <http://www.gnu.org/licenses/>.

if test $# -lt 2; then
  echo "usage: mkbuiltins SRCDIR --header|--source f1 f2 ..." 1>&2
  exit 1
fi

SED=${SED:-sed}

srcdir="$1"
shift

make_header=false
make_source=false
case "$1" in
  --header)
    make_header=true
    shift
  ;;
  --source)
    make_source=true
    shift
  ;;
  *)
    echo "mkbuiltins: unrecognized option: $1" 1>&2
    exit 1
  ;;
esac

if $make_header; then

  cat << \EOF
// DO NOT EDIT!  Generated automatically by mkbuiltins.

#if ! defined (octave_builtin_defun_decls_h)
#define octave_builtin_defun_decls_h 1

#include "octave-config.h"

#include "ovl.h"

#define XDEFUN_DECL(name) \
  extern OCTINTERP_API octave_value_list \
  name (const octave_value_list& = octave_value_list (), int = 0);

#if defined (ENABLE_DYNAMIC_LINKING)
#  define XDEFUN_DLD_DECL(name)
#else
#  define XDEFUN_DLD_DECL(name) XDEFUN_DECL (name)
#endif

EOF

  for arg
  do
    if [ -f $arg ]; then
      file="$arg";
    else
      file="$srcdir/$arg";
    fi

    $SED -n -e 's/^[ \t]*DEF\(CONSTFUN\|UN\)[ \t]*( *\([_A-Za-z][_A-Za-z0-9]*\) *,.*$/XDEFUN_DECL (F\2)/p; s/^[ \t]*DEFUNX[ \t]*( *"\([_A-Za-z][_A-Za-z0-9]*\)" *,.*$/XDEFUN_DECL (F\1)/p; s/^[ \t]*DEFUN_DLD[ \t]*( *\([_A-Za-z][_A-Za-z0-9]*\) *,.*$/XDEFUN_DLD_DECL (F\1)/p; s/^[ \t]*DEFUNX_DLD[ \t]*( *"\([_A-Za-z][_A-Za-z0-9]*\)" *,.*$/XDEFUN_DLD_DECL (F\1)/p' "$file"
  done

  cat << \EOF

#undef XDEFUN_DECL
#undef XDEFUN_DLD_DECL

#endif

EOF

elif $make_source; then

  cat << \EOF
// DO NOT EDIT!  Generated automatically by mkbuiltins.

#if defined (HAVE_CONFIG_H)
#include "config.h"
#endif

#include "defun.h"
#include "help.h"
#include "ovl.h"
#include "variables.h"
#include "builtin-defun-decls.h"
#include "builtins.h"

#if defined (quad)
#  undef quad
#endif

#if defined (ENABLE_DYNAMIC_LINKING)

#  define XDEFUN_DLD_INTERNAL(name)

#  define XDEFUNX_DLD_INTERNAL(name, fname)

#else

#  define XDEFUN_DLD_INTERNAL(name) \
     XDEFUN_INTERNAL(name)

#  define XDEFUNX_DLD_INTERNAL(name, fname) \
     XDEFUNX_INTERNAL(name, fname)

#endif

#define XDEFUN_INTERNAL(name) \
  install_builtin_function (F ## name, #name, file, "external-doc"); \

#define XDEFCONSTFUN_INTERNAL(name) \
  install_builtin_function (F ## name, #name, file, "external-doc", false); \

#define XDEFUNX_INTERNAL(name, fname) \
  install_builtin_function (fname, name, file, "external-doc"); \

#define XDEFALIAS_INTERNAL(alias, name) \
  alias_builtin (#alias, #name);

EOF

  for arg
  do
    if [ -f $arg ]; then
      file="$arg";
    else
      file="$srcdir/$arg";
    fi

    fcn=`echo "$arg" | $SED 's,.*/,,; s/\.\(cc\|cpp\|in\.yy\|ll\)$//; s/-/_/g;'`
    echo "static void"
    echo "install_${fcn}_fcns (void)"
    echo "{"
    echo "  std::string file = \"$arg\";"
    echo ""
    $SED -n \
      -e 's/^ *\(DEFUN\(_DLD\|\)\) *( *\([^ ,]*\) *,.*$/  X\1_INTERNAL (\3);/p' \
      -e 's/^ *\(DEFUNX\(_DLD\|\)\) *( *\("[^"]*"\) *, *\([^ ,]*\) *,.*$/  X\1_INTERNAL (\3, \4);/p' \
      -e 's/^ *\(DEFCONSTFUN\) *( *\([^ ,]*\) *,.*$/  X\1_INTERNAL (\2);/p' \
      -e 's/^ *\(DEFALIAS\) *( *\([^ ,]*\) *, *\([^ )]*\) *).*$/  X\1_INTERNAL (\2, \3);/p' \
      "$file"
    echo "}"
    echo ""
  done

  cat << \EOF

void
install_builtins (void)
{
EOF

  for arg
  do
    fcn=`echo "$arg" | $SED 's,.*/,,; s/\.\(cc\|cpp\|in\.yy\|ll\)$//; s/-/_/g;'`
    echo "  install_${fcn}_fcns ();"
  done

  cat << \EOF

  install_built_in_docstrings ();
}

EOF

else

  echo "mkbuiltins: must specify --header or --source!" 1>&2
  exit 1

fi

exit 0
