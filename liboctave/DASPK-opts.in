CLASS = "DASPK"

INCLUDE = "DAE.h"

OPTION
  NAME = "absolute tolerance"
  TYPE = "Array<double>"
  SET_ARG_TYPE = "const $TYPE&"
  INIT_BODY
    $OPTVAR.resize (1);
    $OPTVAR(0) = ::sqrt (DBL_EPSILON);
  END_INIT_BODY
  SET_CODE
    void set_$OPT (double val)
      {
        $OPTVAR.resize (1);
        $OPTVAR(0) = (val > 0.0) ? val : ::sqrt (DBL_EPSILON);
      }

    void set_$OPT (const $TYPE& val)
      { $OPTVAR = val; }
  END_SET_CODE
END_OPTION

OPTION
  NAME = "relative tolerance"
  TYPE = "Array<double>"
  SET_ARG_TYPE = "const $TYPE&"
  INIT_BODY
    $OPTVAR.resize (1);
    $OPTVAR(0) = ::sqrt (DBL_EPSILON);
  END_INIT_BODY
  SET_CODE
    void set_$OPT (double val)
      {
        $OPTVAR.resize (1);
        $OPTVAR(0) = (val > 0.0) ? val : ::sqrt (DBL_EPSILON);
      }

    void set_$OPT (const $TYPE& val)
      { $OPTVAR = val; }
  END_SET_CODE
END_OPTION

OPTION
  NAME = "compute consistent initial condition"
  TYPE = "int"
  INIT_VALUE = "0"
  SET_EXPR = "val"
END_OPTION

OPTION
  NAME = "enforce inequality constraints"
  TYPE = "int"
  INIT_VALUE = "0"
  SET_EXPR = "val"
END_OPTION

OPTION
  NAME = "inequality constraint types"
  TYPE = "Array<int>"
  SET_ARG_TYPE = const $TYPE&
  INIT_BODY
    $OPTVAR.resize (1);
    $OPTVAR(0) = 0;
  END_INIT_BODY
  SET_CODE
    void set_$OPT (int val)
      {
        $OPTVAR.resize (1);
        $OPTVAR(0) = (val > 0.0) ? val : 0;
      }

    void set_$OPT (const $TYPE& val)
      { $OPTVAR = val; }
  END_SET_CODE
END_OPTION

OPTION
  NAME = "exclude algebraic variables in error test"
  TYPE = "int"
  INIT_VALUE = "0"
  SET_EXPR = "val"
END_OPTION

OPTION
  NAME = "initial condition maximum step"
  TYPE = "double"
  INIT_VALUE = "-1.0"
  SET_EXPR = "(val >= 0.0) ? val : -1.0"
END_OPTION

OPTION
  NAME = "initial condition maximum jacobian evaluations"
  TYPE = "int"
  INIT_VALUE = "-1"
  SET_EXPR = "(val >= 0) ? val : -1"
END_OPTION

OPTION
  NAME = "initial condition maximum newton iterations"
  TYPE = "int"
  INIT_VALUE = "-1"
  SET_EXPR = "(val >= 0) ? val : -1"
END_OPTION

OPTION
  NAME = "initial condition minimum linesearch step"
  TYPE = "double"
  INIT_VALUE = "-1.0"
  SET_EXPR = "(val >= 0.0) ? val : 0.0"
END_OPTION

OPTION
  NAME = "initial condition omit linesearch"
  TYPE = "int"
  INIT_VALUE = "0"
  SET_EXPR = "val"
END_OPTION

OPTION
  NAME = "initial condition swing factor"
  TYPE = "double"
  INIT_VALUE = "1.0"
  SET_EXPR = "(val >= 0.0) ? val : -1.0"
END_OPTION

OPTION
  NAME = "initial step size"
  TYPE = "double"
  INIT_VALUE = "-1.0"
  SET_EXPR = "(val >= 0.0) ? val : -1.0"
END_OPTION

OPTION
  NAME = "maximum order"
  TYPE = "int"
  INIT_VALUE = "-1"
  SET_EXPR = "val"
END_OPTION

OPTION
  NAME = "maximum step size"
  TYPE = "double"
  INIT_VALUE = "-1.0"
  SET_EXPR = "(val >= 0.0) ? val : -1.0"
END_OPTION

OPTION
  NAME = "minimum step size"
  TYPE = "double"
  INIT_VALUE = "0.0"
  SET_EXPR = "(val >= 0.0) ? val : 0.0"
END_OPTION

OPTION
  NAME = "print initial condition info"
  TYPE = "int"
  INIT_VALUE = "0"
  SET_EXPR = "val"
END_OPTION

