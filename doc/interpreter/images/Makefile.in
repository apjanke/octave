TOPDIR = ../../..

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@

include $(TOPDIR)/Makeconf

SOURCES = sparseimages.m

SPARSEIMAGES_1 = gplot grid spmatrix spchol spcholperm
SPARSEIMAGES = \
  $(addsuffix .eps, $(SPARSEIMAGES_1)) \
  $(addsuffix .png, $(SPARSEIMAGES_1)) \
  $(addsuffix .txt, $(SPARSEIMAGES_1))
IMAGES += $(SPARSEIMAGES) $(addsuffix .pdf, $(SPARSEIMAGES_1))

DISTFILES = Makefile.in $(SOURCES) $(IMAGES)

OCTAVE_BINARY = $(TOPDIR)/src/octave

OCTAVE_SCRIPT_PATH = .//:$(srcdir)//:$(TOPDIR)/src//:$(top_srcdir)/scripts//

ifeq ($(SHARED_LIBS), true)
  OCTAVE_LD_LIBRARY_PATH = $(TOPDIR)/src:$(TOPDIR)/liboctave:$(TOPDIR)/libcruft
  ifeq ($(@library_path_var@),)
    XLD_LIBRARY_PATH = $(OCTAVE_LD_LIBRARY_PATH)
  else
    XLD_LIBRARY_PATH = $(OCTAVE_LD_LIBRARY_PATH):$(@library_path_var@)
  endif
  SET_LD_LIBRARY_PATH = @library_path_var@="$(XLD_LIBRARY_PATH)"
endif

all: $(IMAGES)
.PHONY: all

define run-octave
  $(SET_LD_LIBRARY_PATH) $(OCTAVE_BINARY) -f -q -H -p $(OCTAVE_SCRIPT_PATH) \
    --eval "$(notdir $(basename $<)) ('$(notdir $(basename $@))', '$(patsubst .%,%, $(suffix $@))')"
endef

$(SPARSEIMAGES): sparseimages.m
	$(run-octave)

%.pdf : %.eps
	if [ -f $< ] ; then gs -dBATCH -dEPSCrop -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=$@ $< ; fi

install install-strip:
.PHONY: install install-strip

uninstall:
.PHONY: uninstall

tags: $(SOURCES)
	ctags $(SOURCES)

TAGS: $(SOURCES)
	etags $(SOURCES)

clean:
.PHONY: clean

mostlyclean:
.PHONY: mostlyclean

distclean: clean
	rm -f Makefile
.PHONY: distclean

maintainer-clean: distclean
	rm -f tags TAGS
	rm -f $(IMAGES)
.PHONY: maintainer-clean

dist:
	ln $(DISTFILES) ../../../`cat ../../../.fname`/doc/interpreter/images
.PHONY: dist
