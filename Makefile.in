#
# Makefile for octave's src directory
#
# John W. Eaton
# jwe@bevo.che.wisc.edu
# University of Wisconsin-Madison
# Department of Chemical Engineering

# Maybe this message will prevent people from asking why the
# Makefiles don't work for them.  Maybe not.

all: FORCE
	@echo ""
	@echo "**********************************************************"
	@echo "*                                                        *"
	@echo "*  To compile Octave, you will need a recent version of  *"
	@echo "*  GNU Make.                                             *"
	@echo "*                                                        *"
	@echo "*  You will also need g++ and libg++.                    *"
	@echo "*                                                        *"
	@echo "*  This version of Octave has been developed with        *"
	@echo "*  version 2.7.2.   You probably won't get very far      *"
	@echo "*  with earlier versions.  Later versions may work,      *"
	@echo "*  but C++ is still evolving, so don't be too surprised  *"
	@echo "*  if you run into some trouble.                         *"
	@echo "*                                                        *"
	@echo "*  Now would be a good time to read INSTALL.OCTAVE if    *"
	@echo "*  you have not done so already.                         *"
	@echo "*                                                        *"
	@echo "**********************************************************"
	@echo ""
	$(MAKE) -f octMakefile all

# plplot should go in TARGETS if we start distributing it.

TARGETS = octave-bug mkoctfile libcruft liboctave kpathsea info dlfcn \
	src scripts doc check octave.info INSTALL.OCTAVE BUGS \
	install uninstall tags TAGS dist conf-dist snapshot snapshot-version

NO_DEP_TARGETS = clean mostlyclean distclean maintainer-clean

ALL_TARGETS = $(TARGETS) $(NO_DEP_TARGETS)

$(TARGETS): FORCE
	$(MAKE) -f octMakefile $@

$(NO_DEP_TARGETS): FORCE
	$(MAKE) -f octMakefile omit_deps=true $@

binary-dist: FORCE
	@echo "***"
	@echo "*** you must specify either static or dynamic:"
	@echo "***"
	@echo "*** make dynamic-binary-dist"
	@echo "***"
	@echo "***   dynamically linked version typically including support"
	@echo "***   for shared libraried and dynamically linked functions"
	@echo "***"
	@echo "*** make static-binary-dist"
	@echo "***"
	@echo "***   statically linked version"
	@echo "***"

static-binary-dist:
	$(MAKE) -f octMakefile DIST_TYPE=static binary-dist

dynamic-binary-dist:
	$(MAKE) -f octMakefile DIST_TYPE=dynamic binary-dist

FORCE:  
